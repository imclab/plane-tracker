#############################################################################
# Makefile for building: PlaneTracker.app/Contents/MacOS/PlaneTracker
# Generated by qmake (2.01a) (Qt 4.8.3) on: Thu Nov 8 18:25:18 2012
# Project:  PlaneTracker.pro
# Template: app
# Command: /usr/local/bin/qmake -o Makefile PlaneTracker.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DTHERON_BOOST -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -isystem /usr/local/include/decklink -O2 -std=c++11 -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Cellar/qt/4.8.3/mkspecs/macx-g++ -I. -I/usr/local/Cellar/qt/4.8.3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.3/include -I/usr/local/include/External -I/usr/local/Cellar/opencv/2.4.2/include/opencv -I. -I. -F/usr/local/Cellar/qt/4.8.3/lib
LINK          = g++
LFLAGS        = -headerpad_max_install_names
LIBS          = $(SUBLIBS) -F/usr/local/Cellar/qt/4.8.3/lib -L/usr/local/Cellar/qt/4.8.3/lib `pkg-config opencv cvblob --cflags --libs` -lopencv_core -lboost_system-mt -lboost_iostreams-mt -ltherond -lboost_thread-mt -lboost_program_options-mt -lopencv_highgui -lopencv_imgproc -lm -lpthread -framework CoreFoundation -framework QtGui -L/usr/local/Cellar/qt/4.8.3/lib -F/usr/local/Cellar/qt/4.8.3/lib -framework QtCore 
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/local/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.4

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Log.cpp \
		FrameAnalyzerActor.cpp \
		GPSReceiverInterface.cpp \
		GeoReference.cpp \
		GeoreferencingActor.cpp \
		Messages.cpp \
		MultimodalActor.cpp \
		Protocol.cpp \
		VideoReceiverInterface.cpp \
		Vision.cpp \
		tracker.cpp \
		ui.cpp moc_ui.cpp
OBJECTS       = Log.o \
		FrameAnalyzerActor.o \
		GPSReceiverInterface.o \
		GeoReference.o \
		GeoreferencingActor.o \
		Messages.o \
		MultimodalActor.o \
		Protocol.o \
		VideoReceiverInterface.o \
		Vision.o \
		tracker.o \
		ui.o \
		moc_ui.o
DIST          = /usr/local/Cellar/qt/4.8.3/mkspecs/common/unix.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/common/mac.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/common/gcc-base.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/common/g++-base.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/common/g++-macx.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/qconfig.pri \
		/usr/local/Cellar/qt/4.8.3/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/qt_functions.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/qt_config.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/exclusive_builds.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/default_pre.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/default_pre.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/release.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/default_post.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/default_post.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/x86_64.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/objective_c.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/warn_on.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/qt.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/unix/thread.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/moc.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/rez.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/sdk.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/resources.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/uic.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/yacc.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/lex.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/include_source_dir.prf \
		PlaneTracker.pro
QMAKE_TARGET  = PlaneTracker
DESTDIR       = 
TARGET        = PlaneTracker.app/Contents/MacOS/PlaneTracker

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-O2 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile PlaneTracker.app/Contents/PkgInfo PlaneTracker.app/Contents/Resources/empty.lproj PlaneTracker.app/Contents/Info.plist $(TARGET)

$(TARGET): ui_ui.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) PlaneTracker.app/Contents/MacOS/ || $(MKDIR) PlaneTracker.app/Contents/MacOS/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: PlaneTracker.pro  /usr/local/Cellar/qt/4.8.3/mkspecs/macx-g++/qmake.conf /usr/local/Cellar/qt/4.8.3/mkspecs/common/unix.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/common/mac.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/common/gcc-base.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/common/g++-base.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/common/g++-macx.conf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/qconfig.pri \
		/usr/local/Cellar/qt/4.8.3/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/qt_functions.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/qt_config.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/exclusive_builds.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/default_pre.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/default_pre.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/release.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/default_post.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/default_post.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/x86_64.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/objective_c.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/warn_on.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/qt.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/unix/thread.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/moc.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/rez.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/sdk.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/resources.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/uic.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/yacc.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/lex.prf \
		/usr/local/Cellar/qt/4.8.3/mkspecs/features/include_source_dir.prf \
		/usr/local/Cellar/qt/4.8.3/lib/QtGui.framework/QtGui.prl \
		/usr/local/Cellar/qt/4.8.3/lib/QtCore.framework/QtCore.prl
	$(QMAKE) -o Makefile PlaneTracker.pro
/usr/local/Cellar/qt/4.8.3/mkspecs/common/unix.conf:
/usr/local/Cellar/qt/4.8.3/mkspecs/common/mac.conf:
/usr/local/Cellar/qt/4.8.3/mkspecs/common/gcc-base.conf:
/usr/local/Cellar/qt/4.8.3/mkspecs/common/gcc-base-macx.conf:
/usr/local/Cellar/qt/4.8.3/mkspecs/common/g++-base.conf:
/usr/local/Cellar/qt/4.8.3/mkspecs/common/g++-macx.conf:
/usr/local/Cellar/qt/4.8.3/mkspecs/qconfig.pri:
/usr/local/Cellar/qt/4.8.3/mkspecs/modules/qt_webkit_version.pri:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/qt_functions.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/qt_config.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/exclusive_builds.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/default_pre.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/default_pre.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/release.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/default_post.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/default_post.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/x86_64.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/objective_c.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/warn_on.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/qt.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/unix/thread.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/moc.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/rez.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/mac/sdk.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/resources.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/uic.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/yacc.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/lex.prf:
/usr/local/Cellar/qt/4.8.3/mkspecs/features/include_source_dir.prf:
/usr/local/Cellar/qt/4.8.3/lib/QtGui.framework/QtGui.prl:
/usr/local/Cellar/qt/4.8.3/lib/QtCore.framework/QtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile PlaneTracker.pro

PlaneTracker.app/Contents/PkgInfo: 
	@$(CHK_DIR_EXISTS) PlaneTracker.app/Contents || $(MKDIR) PlaneTracker.app/Contents 
	@$(DEL_FILE) PlaneTracker.app/Contents/PkgInfo
	@echo "APPL????" >PlaneTracker.app/Contents/PkgInfo
PlaneTracker.app/Contents/Resources/empty.lproj: 
	@$(CHK_DIR_EXISTS) PlaneTracker.app/Contents/Resources || $(MKDIR) PlaneTracker.app/Contents/Resources 
	@touch PlaneTracker.app/Contents/Resources/empty.lproj
	
PlaneTracker.app/Contents/Info.plist: 
	@$(CHK_DIR_EXISTS) PlaneTracker.app/Contents || $(MKDIR) PlaneTracker.app/Contents 
	@$(DEL_FILE) PlaneTracker.app/Contents/Info.plist
	@sed -e "s,@SHORT_VERSION@,1.0,g" -e "s,@TYPEINFO@,????,g" -e "s,@ICON@,,g" -e "s,@EXECUTABLE@,PlaneTracker,g" -e "s,@TYPEINFO@,????,g" /usr/local/Cellar/qt/4.8.3/mkspecs/macx-g++/Info.plist.app >PlaneTracker.app/Contents/Info.plist
dist: 
	@$(CHK_DIR_EXISTS) .tmp/PlaneTracker1.0.0 || $(MKDIR) .tmp/PlaneTracker1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/PlaneTracker1.0.0/ && $(COPY_FILE) --parents Log.h FrameAnalyzerActor.h GPSReceiverInterface.h GeoReference.h GeoreferencingActor.h Messages.h MultimodalActor.h Protocol.h VideoReceiverInterface.h Vision.h ui.h .tmp/PlaneTracker1.0.0/ && $(COPY_FILE) --parents Log.cpp FrameAnalyzerActor.cpp GPSReceiverInterface.cpp GeoReference.cpp GeoreferencingActor.cpp Messages.cpp MultimodalActor.cpp Protocol.cpp VideoReceiverInterface.cpp Vision.cpp tracker.cpp ui.cpp .tmp/PlaneTracker1.0.0/ && $(COPY_FILE) --parents ui.ui .tmp/PlaneTracker1.0.0/ && (cd `dirname .tmp/PlaneTracker1.0.0` && $(TAR) PlaneTracker1.0.0.tar PlaneTracker1.0.0 && $(COMPRESS) PlaneTracker1.0.0.tar) && $(MOVE) `dirname .tmp/PlaneTracker1.0.0`/PlaneTracker1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/PlaneTracker1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r PlaneTracker.app
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all: moc_ui.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_ui.cpp
moc_ui.cpp: ui.h
	/usr/local/Cellar/qt/4.8.3/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ ui.h -o moc_ui.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all: ui_ui.h
compiler_uic_clean:
	-$(DEL_FILE) ui_ui.h
ui_ui.h: ui.ui
	/usr/local/Cellar/qt/4.8.3/bin/uic ui.ui -o ui_ui.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

Log.o: Log.cpp Log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Log.o Log.cpp

FrameAnalyzerActor.o: FrameAnalyzerActor.cpp FrameAnalyzerActor.h \
		Messages.h \
		Vision.h \
		Log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FrameAnalyzerActor.o FrameAnalyzerActor.cpp

GPSReceiverInterface.o: GPSReceiverInterface.cpp GPSReceiverInterface.h \
		Messages.h \
		Protocol.h \
		Log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GPSReceiverInterface.o GPSReceiverInterface.cpp

GeoReference.o: GeoReference.cpp GeoReference.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GeoReference.o GeoReference.cpp

GeoreferencingActor.o: GeoreferencingActor.cpp GeoreferencingActor.h \
		Messages.h \
		GeoReference.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GeoreferencingActor.o GeoreferencingActor.cpp

Messages.o: Messages.cpp Messages.h \
		Log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Messages.o Messages.cpp

MultimodalActor.o: MultimodalActor.cpp MultimodalActor.h \
		Messages.h \
		Log.h \
		Protocol.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MultimodalActor.o MultimodalActor.cpp

Protocol.o: Protocol.cpp Protocol.h \
		Messages.h \
		Log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Protocol.o Protocol.cpp

VideoReceiverInterface.o: VideoReceiverInterface.cpp VideoReceiverInterface.h \
		Messages.h \
		Log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o VideoReceiverInterface.o VideoReceiverInterface.cpp

Vision.o: Vision.cpp Vision.h \
		Messages.h \
		Log.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Vision.o Vision.cpp

tracker.o: tracker.cpp VideoReceiverInterface.h \
		GPSReceiverInterface.h \
		Messages.h \
		FrameAnalyzerActor.h \
		Vision.h \
		GeoreferencingActor.h \
		MultimodalActor.h \
		Log.h \
		ui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tracker.o tracker.cpp

ui.o: ui.cpp ui.h \
		ui_ui.h \
		Log.h \
		FrameAnalyzerActor.h \
		Messages.h \
		Vision.h \
		GeoreferencingActor.h \
		MultimodalActor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ui.o ui.cpp

moc_ui.o: moc_ui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ui.o moc_ui.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

